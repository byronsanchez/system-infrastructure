###########################################
#                                         #
# MANAGED BY PUPPET                       #
#                                         #
# Manual changes WILL be overwritten      #
#                                         #
###########################################

*nat
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
# SSH via nonstandard port
-A PREROUTING -p tcp -m tcp --dport 1224 -j REDIRECT --to-ports 22
# allow forwarding from localhost
-A OUTPUT -o lo -p tcp -m tcp --dport 1224 -j REDIRECT --to-ports 22
COMMIT

*mangle
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
# Tag direct port 22 packets to block (this way, only the forwarded port is
# allowed access while blocking the destination ssh port; otherwise, both ports
# would need be open to public)
-A PREROUTING -p tcp -m tcp --dport 22 -j MARK --set-mark 1
COMMIT

*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]

# Allow loopback (lo0) traffic and drop all traffic to 127/8 that doesn't use lo0
-A INPUT -i lo -j ACCEPT
-A INPUT -d 127.0.0.0/8 -j REJECT

# Accept all established inbound connections
-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT

# Allow ping
-A INPUT -p icmp -j ACCEPT

# Allow all outbound traffic - you can modify this to only allow certain traffic
-A OUTPUT -j ACCEPT

# DNS
-A INPUT -s 10.66.77.0/24 -p udp -m udp --dport 53 -j ACCEPT
-A INPUT -s 10.66.77.0/24 -p tcp -m tcp --dport 53 -j ACCEPT

# Drop marked packets (direct port 22 packets)
-A INPUT -m mark --mark 1 -j DROP
# Accept forwarded SSH connections from anywhere
-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT
-A INPUT -p tcp -m tcp --dport 1224 -j ACCEPT

# Log iptables denied calls
-A INPUT -m limit --limit 5/min -j LOG --log-prefix "iptables denied: " --log-level 7
# Drop all other inbound - default deny unless explicitly allowed policy
-A INPUT -j DROP
-A FORWARD -j DROP

COMMIT
