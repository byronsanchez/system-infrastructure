###########################################
#                                         #
# MANAGED BY PUPPET                       #
#                                         #
# Manual changes WILL be overwritten      #
#                                         #
###########################################

USE="agent audit bcmath device-mapper dlz gd -gpm -gtk imap ipv6 -ldap libwww maildir mhash maildir png -pppd sasl sockets -sqlite3 ssl truetype ubac unicode xml -xorg udev -unconfined vhosts xattr"

<% if @use_flags -%>
USE="${USE} <%= @use_flags %>"
<% end -%>

<% if @lowmemorybox -%>
# Low memory, so compiles will go slower with these flags, but at least they
# won't be killed for OOM errors
# Forces GCC to never allocate more than ggc-min-heapsize amount of heap
# IF ALL ELSE FAILS, CONSIDER SETTING UP DISTCC AND PIPE THE PROCESSES TO A MORE
# CAPABLE NODE ON THE NETWORK (EG BINHOST)
# use if you have 512mb+ ram systems that have OOM compile errors
#CFLAGS="-march=x86-64 -O2 -pipe --param ggc-min-expand=20 --param ggc-min-heapsize=32768"
# use for 256mb or less
#CFLAGS="-march=x86-64 -O2 -pipe --param ggc-min-expand=0 --param ggc-min-heapsize=8192"
# whether or not to enable pipes has mixed opinions on internet discussions. In
# my own case, I was not able to compile rabbitmq-server dependencies with pipes
# enabled (OOM errors that killed the compile). Disabling pipes made that
# problem go away. This was on a 256MB RAM node.
CFLAGS="-march=x86-64 -O2 --param ggc-min-expand=0 --param ggc-min-heapsize=8192"
#LDFLAGS="${LDFLAGS} -Wl,--no-keep-memory -Wl,--reduce-memory-overheads, -Wl,--hash-style=gnu"
LDFLAGS="${LDFLAGS} -Wl,--hash-style=gnu"
<% else -%>
CFLAGS="-march=x86-64 -O2 -pipe"
LDFLAGS="${LDFLAGS} -Wl,--hash-style=gnu"
<% end -%>
CXXFLAGS="${CFLAGS}"
CHOST="x86_64-pc-linux-gnu"

# Use localnet distfiles for application ebuilds
GENTOO_MIRRORS="http://binhost.internal.nitelite.io/nitelite-applications"

# Use localnet distfiles for overlay ebuilds if possible
GENTOO_MIRRORS="${GENTOO_MIRRORS} http://binhost.internal.nitelite.io/nitelite-a"
GENTOO_MIRRORS="${GENTOO_MIRRORS} http://binhost.internal.nitelite.io/nitelite-b"
# Use localnet for main portage tree distfiles if possible; otherwise fallback
# to external mirrors
GENTOO_MIRRORS="${GENTOO_MIRRORS} http://binhost.internal.nitelite.io/gentoo http://mirror.mcs.anl.gov/pub/gentoo/ http://gentoo.osuosl.org/ http://mirror.lug.udel.edu/pub/gentoo/"

# Set PORTDIR for backward compatibility with various tools:
#   gentoo-bashcomp - bug #478444
#   euse - bug #474574
#   euses and ufed - bug #478318
# Each node has its own portage tree to track for overlays, main tree
PORTDIR="/usr/portage"
DISTDIR="/usr/portage/distfiles"
PKGDIR="/usr/portage/packages"

<% if @ipaddress == @binhost_address -%>
# k - (--usepkg) - asks emerge to try to install the prebuilt package first
# before fetching the sources and compiling it
#EMERGE_DEFAULT_OPTS="-k -g"
#EMERGE_EXTRA_OPTS="-k -g"
FEATURES="buildpkg webrsync-gpg userfetch"
<% else -%>
PORTAGE_BINHOST="http://binhost.internal.nitelite.io/packages"
# k - (--usepkg) - asks emerge to try to install the prebuilt package first
# before fetching the sources and compiling it
# g - (--getbinpkg) - tells emerge to download the prebuilt package from the
# binhost
# binpkg-respect-use=y - ignore binaries if it's use flags don't match. This is
# important because deviations can break the infrastructure (eg. php without fpm
# is no good if the node requires fpm).
# rebuilt-binaries=y - reinstall every binary that has been rebuild since the
# package was installed. This is useful in case rebuilding tools like
# revdep-rebuild or python-updater are run on the binary package server. 
EMERGE_DEFAULT_OPTS="-k -g --binpkg-respect-use=y --rebuilt-binaries=y"
EMERGE_EXTRA_OPTS="-k -g --binpkg-respect-use=y --rebuilt-binaries=y"
FEATURES="buildpkg"
# Use nfs mounts if you get the USE flag matching scripts written
#DISTDIR="/mnt/gentoo-distfiles"
#PKGDIR="/mnt/gentoo-local-packages"
# Set PORTDIR for backward compatibility with various tools:
#   gentoo-bashcomp - bug #478444
#   euse - bug #474574
#   euses and ufed - bug #478318
<% end -%>

# Portage will mercilessly update all files in the following directories. This
# is useful since all puppet files are being distributed via tarball and so
# there is no reason to preserve the foles as they will be completed replaced on
# each update.
CONFIG_PROTECT_MASK="/etc/puppet"
POLICY_TYPES="strict mcs"
PORT_LOGDIR="/var/log/portage/builds"
MAKEOPTS="-j<%= @processorcount %>"

<% if @linguas %>
LINGUAS="<%= @linguas %>"
<% end -%>

<% if @video_cards -%>
VIDEO_CARDS="<%= @video_cards %>"
<% end -%>

<% if @input_devices %>
INPUT_DEVICES="<%= @input_devices %>"
<% end -%>

<% if @environment == "production" %>
PHP_INI_VERSION="production"
<% else %>
PHP_INI_VERSION="development"
<% end -%>

PHP_TARGETS="php5-5 php5-4"

source /var/lib/layman/make.conf

