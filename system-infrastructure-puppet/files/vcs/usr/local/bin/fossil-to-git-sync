#!/bin/sh
#
# Mirror source fossil repos to git so that other devs can play with code using
# git if they'd like.

###########################################
#                                         #
# MANAGED BY PUPPET                       #
#                                         #
# Manual changes WILL be overwritten      #
#                                         #
###########################################

source /usr/local/lib/nitelite/helpers/common.lib.sh;

fossil_dir="/srv/fossil/fossils"
git_dir="/srv/git/repositories"

organization=""
repository=""

quiet=0

############################
# Argument Parsing Functions

# TODO: validate action values

function show_help ()
{
cat <<-EOM

$0 [OPTION] command

options:

    -o --organization=NAME         Organization that owns the repo
    -r --repository=NAME           Repository name

other:

    -q --quiet               do not log messages to STDOUT
    -h --help                display this message

EOM
    exit 1
}

function get_options () {
    argv=()
    while [ $# -gt 0 ]
    do
        opt=$1
        shift
        case ${opt} in
            -o|--organization)
                organization=$1
                shift
                ;;
            --organization=*)
                organization=$(echo ${opt} | cut -d'=' -f 2);
                ;;
            -r|--repository)
                repository=$1
                shift
                ;;
            --repository=*)
                repository=$(echo ${opt} | cut -d'=' -f 2);
                ;;

            -q|--quiet)
                quiet=1
                ;;
            -h|--help)
                show_help
                ;;
            *)
                if [ "${opt:0:1}" = "-" ]; then
                    fail "${opt}: unknown option."
                fi
                argv+=(${opt})
                ;;
        esac
    done
}

##################
# GLOBAL VALIDATION

# Parse options if they were passed
get_options $*

if [ ! -d "$fossil_dir" ]; then
  # If there are no repos, then there is nothing to export.
  # Exit...
  exit 1;
fi

if [ ! -n "${organization}" ];
then
  exit 1;
fi

if [ ! -n "${repository}" ];
then
  exit 1;
fi

#############
# MAIN SCRIPT

org_name="${organization}"
fossil_repo="${repository}.fossil"
fossil_repo_path="${fossil_dir}/${organization}/${fossil_repo}"

git_repo="$(echo "${fossil_repo}" | sed 's/.fossil/.git/g')"
git_dst="${git_dir}/${org_name}/${git_repo}"

if [ ! -e "${git_dst}" ];
then
  mkdir -p "${git_dst}"
fi

cd ${git_dst}

if [ ! -e "${git_dst}/HEAD" ];
then
  /usr/bin/git init --bare
  /usr/bin/git config user.name "Byron Sanchez"
  /usr/bin/git config user.email "byron@byronsanchez.io"
fi

fossil export --git ${fossil_repo_path} | git fast-import --force

# trunk is always newest
git branch | grep -q "trunk"
if [ $? -eq 0 ];
then
  git branch | grep -q "master"
  if [ $? -eq 0 ];
  then
    # switch to trunk the bare repo way
    git symbolic-ref HEAD refs/heads/trunk
    git branch -d master
  fi

  # convert trunk to master
  git branch -m trunk master
fi

# serve via git protocol
touch "${git_dst}/git-daemon-export-ok"

# update the description
description=$(sqlite3 ${fossil_repo_path} "select value from config where name='project-description';")
echo "${description}" > ${git_dst}/description

